
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import java.util.Deque;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Camer
 */
public class DrawBoard extends javax.swing.JPanel {

    MouseHandler mouseHandler = new MouseHandler();
    Deque<Point> points = new LinkedList<>();
    List<Rectangle2D> recCol = new ArrayList<>();

    private class MouseHandler extends MouseAdapter {

        public void mouseReleased(MouseEvent e) {
            if (btnModeSel.isSelected()) {
                if (points.size() == 2) {
                    points.removeFirst();
                }
                points.addLast(e.getPoint());
                repaint();
            }
        }
    }

    /**
     * Creates new form DrawBoard
     */
    public DrawBoard() {
        initComponents();
        this.setPreferredSize(new Dimension(500, 400));
        this.addMouseListener(mouseHandler);
    }

    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D gd = (Graphics2D) g;
        if (btnModeSel.isSelected()) {
            gd.setPaint(Color.RED);
            points.stream().forEach((p) -> {
                gd.fill(new Ellipse2D.Double(p.x, p.y, 10, 10));
            });
        } else {
            Random r = new Random();
            for (Rectangle2D rec : recCol) {
                int c = r.nextInt(255);
                gd.setPaint(new Color(c, (c + 100) % 255, 255 - c));
                gd.fill(rec);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnModeSel = new javax.swing.JToggleButton();

        btnModeSel.setText("View Mode");
        btnModeSel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnModeSelItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 305, Short.MAX_VALUE)
                .addComponent(btnModeSel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnModeSel)
                .addGap(0, 275, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnModeSelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnModeSelItemStateChanged
        // TODO add your handling code here:
        if (btnModeSel.isSelected()) {
            points.clear();
            btnModeSel.setText("Add Mode");
        } else {
            btnModeSel.setText("View Mode");
            if (points.size() == 2) {
                Point p1 = points.getFirst(), p2 = points.getLast();
                recCol.add(new Rectangle2D.Double(Math.min(p1.x, p2.x), Math.min(p1.y,p2.y), Math.abs(p2.x - p1.x), Math.abs(p2.y - p1.y)));
            }
            repaint();
        }
    }//GEN-LAST:event_btnModeSelItemStateChanged

    public static void main(String[] args) {
        JFrame f = new JFrame("Draw Rectangle On Mouse Click");
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DrawBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.getContentPane().add(new DrawBoard());
        f.pack();
        f.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnModeSel;
    // End of variables declaration//GEN-END:variables
}
